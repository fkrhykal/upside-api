basePath: /
definitions:
  ErrorDetail:
    additionalProperties:
      type: string
    type: object
  Failure-ErrorDetail:
    properties:
      code:
        type: integer
      error:
        $ref: '#/definitions/ErrorDetail'
    type: object
  Failure-string:
    properties:
      code:
        type: integer
      error:
        type: string
    type: object
  SignInRequest:
    properties:
      password:
        maxLength: 128
        minLength: 8
        type: string
      username:
        maxLength: 16
        minLength: 4
        type: string
    required:
    - password
    - username
    type: object
  SignInResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/dto.UserDetail'
    type: object
  SignUpRequest:
    properties:
      password:
        maxLength: 128
        minLength: 8
        type: string
      username:
        maxLength: 16
        minLength: 4
        type: string
    required:
    - password
    - username
    type: object
  SignUpResponse:
    properties:
      id:
        example: b8ae9666-23b8-4ffb-8cf1-f7df0d02130a
        type: string
    type: object
  Success-SignInResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/SignInResponse'
    type: object
  Success-SignUpResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/SignUpResponse'
    type: object
  Success-dto_CreateSideResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/dto.CreateSideResponse'
    type: object
  Success-dto_GetSidesResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/dto.GetSidesResponse'
    type: object
  Success-dto_UserDetail:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/dto.UserDetail'
    type: object
  dto.CreateSideRequest:
    properties:
      description:
        maxLength: 1000
        type: string
      name:
        maxLength: 32
        minLength: 4
        type: string
      nick:
        maxLength: 24
        minLength: 4
        type: string
    required:
    - description
    - name
    - nick
    type: object
  dto.CreateSideResponse:
    properties:
      id:
        type: string
    type: object
  dto.GetSidesResponse:
    properties:
      metadata:
        $ref: '#/definitions/pagination.OffsetBasedMetadata'
      sides:
        items:
          $ref: '#/definitions/dto.Side'
        type: array
    type: object
  dto.MembershipDetail:
    properties:
      id:
        type: string
      role:
        type: string
    type: object
  dto.Side:
    properties:
      id:
        type: string
      membershipDetail:
        $ref: '#/definitions/dto.MembershipDetail'
      name:
        type: string
      nick:
        type: string
    type: object
  dto.UserDetail:
    properties:
      id:
        type: string
      username:
        type: string
    type: object
  pagination.OffsetBasedMetadata:
    properties:
      page:
        type: integer
      perPage:
        type: integer
      totalPage:
        type: integer
    type: object
info:
  contact: {}
  description: This is api for upside application
  title: Upside API
  version: "1.0"
paths:
  /auth/_sign-in:
    post:
      consumes:
      - application/json
      parameters:
      - description: Request body for sign in
        in: body
        name: SignInRequest
        required: true
        schema:
          $ref: '#/definitions/SignInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Success-SignInResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Failure-string'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Failure-string'
      summary: Sign in
      tags:
      - Accounts
  /auth/_sign-up:
    post:
      consumes:
      - application/json
      parameters:
      - description: Request body for sign up
        in: body
        name: SignUpRequest
        required: true
        schema:
          $ref: '#/definitions/SignUpRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Success-SignUpResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Failure-ErrorDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Failure-string'
      summary: Sign up
      tags:
      - Accounts
  /sides:
    get:
      parameters:
      - description: side filter e.g. 'popular'
        in: query
        name: filter
        type: string
      - description: number sides per page
        in: query
        name: limit
        type: integer
      - description: number of page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Success-dto_GetSidesResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Failure-string'
      security:
      - BearerAuth: []
      summary: Get Sides
      tags:
      - Sides
    post:
      parameters:
      - description: Request body for create side
        in: body
        name: CreateSideRequest
        required: true
        schema:
          $ref: '#/definitions/dto.CreateSideRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Success-dto_CreateSideResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Failure-string'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Failure-string'
      security:
      - BearerAuth: []
      summary: Create Side
      tags:
      - Sides
  /users/{id}:
    get:
      parameters:
      - description: user id
        example: 28fd7c57-ffde-4b4b-83c3-4781d93c268e
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Success-dto_UserDetail'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Failure-string'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Failure-string'
      summary: Get User Detail
      tags:
      - Users
securityDefinitions:
  BearerAuth:
    description: 'Bearer token authentication schema, format: Bearer <your-credential-token>'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
